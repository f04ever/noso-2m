name: build
on:
  push:
    branches: [ main ]
    tags:
      - "*"
jobs:
  build-linux:
    name: 'Build Linux'
    runs-on: 'ubuntu-latest'
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Setup clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: latest
        platform: x64
    - name: Install dependecies
      shell: bash
      run: |
        sudo apt -y -qq update
        sudo apt -y -qq install libncurses-dev libc++-dev libc++abi-dev
    - name: Build source
      shell: bash
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --clean-first --build .
        file noso-2m

  build-windows:
    name: 'Build Windows'
    runs-on: 'windows-latest'
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Setup clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: latest
        platform: x64
    - name: Build source
      shell: bash
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --clean-first --build .
        file noso-2m.exe

  build-macos:
    name: 'Build macOS'
    runs-on: 'macos-latest'
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
     - name: Setup clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: latest
        platform: x64
   - name: Build source
      shell: bash
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --clean-first --build .
        file noso-2m

  release-linux:
    if: contains(github.ref, '/tags/')
    name: 'Release ubuntu-latest'
    runs-on: 'ubuntu-latest'
    needs: [build-linux]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Package artifacts
        run: |
          tag=${{ github.event.ref }}
          tag=${tag#"refs/tags/"}
          cp ubuntu-latest/README.md README.md
          #
          cp ubuntu-latest/noso-2m-linux-i686 noso-2m
          chmod +x noso-2m
          tar -zcvf noso-2m-${tag}-linux-i686.tar.gz noso-2m README.md
          #
          cp ubuntu-latest/noso-2m-linux-x86_64 noso-2m
          chmod +x noso-2m
          tar -zcvf noso-2m-${tag}-linux-x86_64.tar.gz noso-2m README.md
          #
          cp ubuntu-latest/noso-2m-linux-armv7a noso-2m
          chmod +x noso-2m
          tar -zcvf noso-2m-${tag}-linux-armv7a.tar.gz noso-2m README.md
          #
          cp ubuntu-latest/noso-2m-linux-aarch64 noso-2m
          chmod +x noso-2m
          tar -zcvf noso-2m-${tag}-linux-aarch64.tar.gz noso-2m README.md
          #
          cp ubuntu-latest/noso-2m-android-armv7a noso-2m
          chmod +x noso-2m
          tar -zcvf noso-2m-${tag}-android-armv7a.tar.gz noso-2m README.md
          #
          cp ubuntu-latest/noso-2m-android-aarch64 noso-2m
          chmod +x noso-2m
          tar -zcvf noso-2m-${tag}-android-aarch64.tar.gz noso-2m README.md
        shell: bash
      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            noso-2m-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-macos:
    if: contains(github.ref, '/tags/')
    name: 'Release macos-latest'
    runs-on: 'macos-latest'
    needs: [build-macos]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Package artifacts
        run: |
          tag=${{ github.event.ref }}
          tag=${tag#"refs/tags/"}
          cp macos-latest/README.md README.md
          cp macos-latest/noso-2m-darwin noso-2m
          chmod +x noso-2m
          tar -zcvf noso-2m-${tag}-darwin.tar.gz noso-2m README.md
        shell: bash
      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            noso-2m-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-windows:
    if: contains(github.ref, '/tags/')
    name: 'Release windows-latest'
    runs-on: 'windows-latest'
    needs: [build-windows]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Package artifacts
        run: |
          tag=${{ github.event.ref }}
          tag=${tag#"refs/tags/"}
          cp windows-latest/README.md README.md
          #
          cp windows-latest/noso-2m-x86_64.exe noso-2m.exe
          cp windows-latest/mingw-w64-clang-x86_64-ncurses-6_3\\bin\\libncurses6.dll libncurses6.dll
          cp windows-latest/mingw-w64-clang-x86_64-ncurses-6_3\\bin\\libform6.dll libform6.dll
          7z a -tzip noso-2m-${tag}-win64-x86_64.zip noso-2m.exe libncurses6.dll libform6.dll README.md
          #
          cp windows-latest/noso-2m-i686.exe noso-2m.exe
          cp windows-latest/mingw-w64-clang-i686-ncurses-6_3\\bin\\libncurses6.dll libncurses6.dll
          cp windows-latest/mingw-w64-clang-i686-ncurses-6_3\\bin\\libform6.dll libform6.dll
          7z a -tzip noso-2m-${tag}-win32-i686.zip noso-2m.exe libncurses6.dll libform6.dll README.md
        shell: bash
      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            noso-2m-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
